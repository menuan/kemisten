# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  name: menuan
  demands:
  - docker
  - elixir-mix

trigger:
  batch: true
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master
  
variables:
  TEST_DB_CON_NAME: 'test-postgresql'
  AZURE_SUBSCRIPTION_DEV: 'menuan-aks-arm'
  AZURE_IMG_REG: 'menuan.azurecr.io'
  AZURE_RESOURCE_GROUP_DEV: 'menuan-aks-rg'
  KUBERNETES_CLUSTER_DEV: 'menuan-aks'
  HELM_CACERT: '99848992-29aa-4b92-90c8-87f3533ac06d'
  HELM_CERT: '4012129c-7488-4cd6-bcf7-0b5c16fe293b'
  HELM_KEY: '10d7af45-56d5-46d2-91ee-f697c74aa362'

variables:
  AZURE_SUBSCRIPTION: 'menuan (c61ac7e7-acd8-4a30-a5c3-d3efedc06f90)'
  AZURE_RESOURCE_GROUP: 'menuan-aks-rg'
  KUBERNETES_CLUSTER: 'menuan-aks'
  IMAGE_TAG: ''

- job: 'cicd'
  displayName: 'Test && deploy'
  continueOnError: false
  timeoutInMinutes: 30
  steps:
  - displayName: 'Get dependencies, compile and run tests'
    script: |
      mix do deps.get, compile
      MIX_ENV=test mix compile
      mix test
  - task: Docker@1
    displayName: 'Push image and its tags'
    inputs:
      azureSubscriptionEndpoint: '$(AZURE_SUBSCRIPTION)'
      azureContainerRegistry: menuan.azurecr.io
      command: 'Push an image'
      pushMultipleImages: true
      imageNamesPath: .docker/images.txt
  - task: HelmDeploy@0
    displayName: 'Upgrade || Install'
    inputs:
      # connectionType: ''
      azureSubscription: '$(AZURE_SUBSCRIPTION_DEV)'
      azureResourceGroup: '$(AZURE_RESOURCE_GROUP)'
      kubernetesCluster: '$(KUBERNETES_CLUSTER_DEV)'
      namespace: 'slack'
      command: upgrade
      chartType: FilePath
      chartPath: '.helm'
      releaseName: 'kemisten'
      overrideValues: 'image.tag=$(IMAGE_TAG),slack.secret.name=kemisten-token,slack.secret.key=token'
